version: "3"
services:
  dsw-server:
    image: datastewardshipwizard/wizard-server:3.3.0
    container_name: server
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - postgres
      - minio
    volumes:
      - ./dsw.yml:/application/engine-wizard/config/application.yml:ro
      - ./templates/dmp:/application/engine-wizard/templates/dmp:ro
      - ./templates/mail:/application/engine-wizard/templates/mail:ro

  dsw-client:
    image: datastewardshipwizard/wizard-client:3.3.0
    container_name: client
    restart: always
    ports:
      - 8080:80
    environment:
      API_URL: https://dsw.dswizard-uoa.cloud.edu.au:3443

  docworker:
    image: datastewardshipwizard/document-worker:3.3.0
    container_name: docworker
    restart: always
    depends_on:
      - postgres
      - minio
      - dsw-server
    volumes:
      - ./dsw.yml:/app/config.yml:ro
      - ./templates/dmp:/app/templates:ro

  postgres:
    image: postgres:13.2
    container_name: postgres
    restart: always
    # (!) Expose only for debugging locally or set-up authentication
    ports:
      - 127.0.0.1:5432:5432
    environment:
      POSTGRES_DB: engine-wizard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # (!) Mount for persistent data
    volumes:
      #  - db-data:/var/lib/postgresql/data
      # OR
      - ./db-data/data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2021-04-22T15-44-28Z
    container_name: minio
    command: server /data
    # (!) Expose only for debugging locally or set-up authentication
    ports:
      - 127.0.0.1:9000:9000
    # (!) Mount and backup for persistent data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minioPassword
    # (!) Mount for persistent data
    volumes:
      #  - s3-data:/data
      # OR
      - ./s3-data/data:/data

  proxy:
    image: nginx:stable
    container_name: proxy
    restart: always
    depends_on:
      - dsw-server
      - dsw-client
    ports:
      - 80:80 #< for certbot (otherwise redirected to 443)
      - 443:443 #< for client
      - 3443:3443 #< for server/api
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro # create if not exists (sudo mkdir /var/www/letsencrypt)
      - /var/www/letsencrypt:/var/www/letsencrypt:ro # create if not exists (sudo mkdir /var/www/letsencrypt)

# volumes:
#   db-data:
#   s3-data:
